import { Sequelize } from "../models";
import db from "../models";
// BuoiHocController.js

// L·∫•y chi ti·∫øt m·ªôt bu·ªïi h·ªçc theo id
// GET http://localhost:3000/api/buoi-hoc/:id
export const getLessonById = async (req, res) => {
    const { id } = req.params
    const lesson = await db.Lesson.findOne({ where: { id } })
    if (!lesson) {
        return res.status(404).json({
            message: `Kh√¥ng t√¨m th·∫•y bu·ªïi h·ªçc v·ªõi ID: ${id}!`
        });
    }
    return res.status(200).json({
        message: '‚úÖ L·∫•y th√¥ng tin bu·ªïi h·ªçc th√†nh c√¥ng!',
        data: lesson
    });
};

// L·∫•y danh s√°ch bu·ªïi h·ªçc theo id c·ªßa l·ªõp
// GET http://localhost:3000/api/buoi-hoc/lop/:ma_lop
export const getLessonByClassId = async (req, res) => {
    const { classId } = req.params;

    const lessons = await db.Lesson.findAll({
        where: { classId },
        include: [
            {
                model: db.Class,
                as: 'class', // üîë Tr√πng v·ªõi alias trong Lesson.belongsTo
                attributes: ['id', 'name', 'description'], // L·∫•y thu·ªôc t√≠nh c·∫ßn thi·∫øt t·ª´ Class
            },
        ],
        order: [['createdAt', 'ASC']], // üëâ S·∫Øp x·∫øp theo th·ªùi gian t·∫°o
    });

    return res.status(200).json({
        message: '‚úÖ L·∫•y danh s√°ch bu·ªïi h·ªçc th√†nh c√¥ng!',
        data: lessons,
    });
};

// Th√™m m·ªôt bu·ªïi h·ªçc m·ªõi
// POST http://localhost:3000/api/buoi-hoc
export const insertLesson = async (req, res) => {
    const newLesson = await db.Lesson.create(req.body);
    return res.status(201).json({
        message: '‚úÖ T·∫°o bu·ªïi h·ªçc m·ªõi th√†nh c√¥ng!',
        data: newLesson,
    });
};

// C·∫≠p nh·∫≠t th√¥ng tin m·ªôt bu·ªïi h·ªçc
// PUT http://localhost:3000/api/buoi-hoc/:id
export const changeLesson = async (req, res) => {
    const id = req.params.id;
    const lesson = await db.Lesson.findOne({ where: { id } });
    if (!lesson) {
        return res.status(404).json({
            message: `Kh√¥ng t√¨m th·∫•y bu·ªïi h·ªçc v·ªõi ID: ${id}!`
        });
    }
    await lesson.update(req.body);
    return res.status(200).json({
        message: '‚úÖ C·∫≠p nh·∫≠t th√¥ng tin bu·ªïi h·ªçc th√†nh c√¥ng!',
    });
};

// X√≥a m·ªôt bu·ªïi h·ªçc theo id
// DELETE http://localhost:3000/api/buoi-hoc/:id
export const deleteLesson = async (req, res) => {
    const { id } = req.params;
    const lesson = await db.Lesson.findOne({ where: { id } });
    if (!lesson) {
        return res.status(404).json({
            message: `Kh√¥ng t√¨m th·∫•y bu·ªïi h·ªçc v·ªõi ID: ${id}!`
        });
    }
    const deleted = await lesson.destroy();
    return res.status(200).json({
        message: '‚úÖ X√≥a bu·ªïi h·ªçc th√†nh c√¥ng!',
    });
};
